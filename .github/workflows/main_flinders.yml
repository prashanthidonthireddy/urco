name: Build and deploy Python app to Azure Web App - flinders

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository's code
      - uses: actions/checkout@v4

      # Set up Python version
      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Create and activate a virtual environment
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      # Install the dependencies from requirements.txt
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
        
      # Optional: Add step to run tests here
      # Uncomment the following lines to run tests if necessary
      # - name: Run tests
      #   run: |
      #     source venv/bin/activate
      #     python manage.py test

      # Package the app as a ZIP file for deployment
      - name: Zip artifact for deployment
        run: |
          zip -r release.zip . -x "venv/*" "*.git/*"
      
      # Upload the ZIP artifact for the deploy job to use
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # Required for requesting the JWT

    steps:
      # Download the build artifact created in the previous job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      # Unzip the artifact for deployment
      - name: Unzip artifact for deployment
        run: unzip release.zip

      # Login to Azure using the secrets stored in GitHub Secrets
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}
          client-secret: ${{ secrets.AZUREAPPSERVICE_CLIENTSECRET }} # Added client-secret

      # Deploy the app to Azure Web App using the webapps-deploy action
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'flinders'
          slot-name: 'Production'
          package: './release.zip'
